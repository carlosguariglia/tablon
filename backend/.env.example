# ============================================
# CONFIGURACIÓN DE BASE DE DATOS
# ============================================
# Servidor de MariaDB
DB_HOST=localhost
DB_PORT=3306

# Credenciales de base de datos
DB_USER=tablon_user
DB_PASSWORD=tu_contraseña_segura

# Nombre de la base de datos
DB_NAME=tablon_db

# ============================================
# CONFIGURACIÓN DE JWT (JSON WEB TOKENS)
# ============================================
# Clave secreta para firmar los tokens (¡CAMBIAR EN PRODUCCIÓN!)
# Usar una cadena aleatoria larga y compleja
JWT_SECRET=tu_secreto_super_seguro_cambiar_en_produccion_usar_cadena_aleatoria_larga

# Tiempo de expiración de los tokens
# Ejemplos: 1h = 1 hora, 24h = 24 horas, 7d = 7 días
JWT_EXPIRES_IN=24h

# ============================================
# CONFIGURACIÓN DEL SERVIDOR
# ============================================
# Puerto en el que correrá el servidor
PORT=3000

# URL del frontend (para CORS)
# En desarrollo: http://localhost:3000
# En producción: https://tu-dominio.com
FRONTEND_URL=http://localhost:3000

# ============================================
# CONFIGURACIÓN DE EMAIL (OPCIONAL)
# ============================================
# Estas variables son OPCIONALES. El sistema funcionará sin ellas,
# pero las notificaciones por email no se enviarán.
# Las notificaciones in-app funcionarán independientemente.

# Servidor SMTP (ejemplo con Gmail)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587

# Credenciales SMTP
# Para Gmail: usar "Contraseña de aplicación" (no la contraseña normal)
# Ver: https://support.google.com/accounts/answer/185833
SMTP_USER=tu_email@gmail.com
SMTP_PASS=tu_contraseña_de_aplicacion

# Email remitente (puede ser el mismo que SMTP_USER)
SMTP_FROM=noreply@tablon.com

# ============================================
# NOTAS IMPORTANTES
# ============================================
# 1. NO subir este archivo a Git - mantener seguras las credenciales
# 2. En producción, usar variables de entorno del servidor/hosting
# 3. Cambiar JWT_SECRET por una cadena aleatoria y compleja
# 4. Usar contraseñas fuertes para DB_PASSWORD
# 5. Si no necesitas emails, puedes omitir las variables SMTP
